{"ast":null,"code":"var _jsxFileName = \"/Users/ishannnnnm/Desktop/portfolio app/client/src/PortfolioContainer/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX, TOTAL_SCREENS } from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      onClick: () => setShowHeaderOptions(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOptions(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ISHAN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n          children: getHeaderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ishannnnnm/Desktop/portfolio app/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREEN","GET_SCREEN_INDEX","TOTAL_SCREENS","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behaviour"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  TOTAL_SCREEN,\n  GET_SCREEN_INDEX,\n  TOTAL_SCREENS,\n} from \"../../../utilities/commonUtils\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\n\nexport default function Header() {\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = (currentScreen) => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription =\n    ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => (\n      <div\n        key={screen.screen_name}\n        className={getHeaderOptionsClass(i)}\n        onClick={() => switchScreen(i, screen)}\n      >\n        <span>{screen.screen_name}</span>\n      </div>\n    ));\n  };\n\n  const getHeaderOptionsClass = (index) => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n\n    screenComponent.scrollIntoView({ behaviour: \"smooth\" });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return (\n    <div>\n      <div\n        className=\"header-container\"\n        onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n      >\n        <div className=\"header-parent\">\n          <div\n            className=\"header-hamburger\"\n            onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n          >\n            <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\n          </div>\n          <div className=\"header-logo\">\n            <span>ISHAN</span>\n          </div>\n          <div\n            className={\n              showHeaderOptions\n                ? \"header-options show-hamburger-options\"\n                : \"header-options\"\n            }\n          >\n            {getHeaderOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}