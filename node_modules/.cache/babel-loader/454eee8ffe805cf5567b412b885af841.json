{"ast":null,"code":"var _jsxFileName = \"/Users/ishannnnnm/Desktop/portfolio app/client/src/PortfolioContainer/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX, TOTAL_SCREENS } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behaviour: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-option\",\n      onClick: () => setShowHeaderOptions(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOptions(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ISHAN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n          children: getHeaderOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"q2MbXurkb4Gbb5Hih7vqcPgrBdM=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/ishannnnnm/Desktop/portfolio app/client/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","TOTAL_SCREEN","GET_SCREEN_INDEX","TOTAL_SCREENS","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behaviour"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,gCAA9D;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,SAAQC,MAAR,QAAqB,mCAArB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAO,cAAP;;AAEA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CX,QAAQ,CAAC,KAAD,CAA1D;;AAEA,QAAMY,mBAAmB,GAAIC,aAAD,IAAiB;AACzC,QAAG,CAACA,aAAD,IAAkB,CAACA,aAAa,CAACC,YAApC,EACA;AACA,QAAIC,WAAW,GAAGb,gBAAgB,CAACW,aAAa,CAACC,YAAf,CAAlC;AACA,QAAGC,WAAW,GAAC,CAAf,EACA;AACH,GAND;;AAQA,MAAIC,yBAAyB,GAAGZ,aAAa,CAACa,wBAAd,CAAuCC,SAAvC,CAAiDN,mBAAjD,CAAhC;;AAEA,QAAMO,gBAAgB,GAAE,MAAI;AACxB,WACIhB,aAAa,CAACiB,GAAd,CAAkB,CAACC,MAAD,EAASC,CAAT,kBACd;AAA8B,MAAA,SAAS,EAAEC,qBAAqB,CAACD,CAAD,CAA9D;AACA,MAAA,OAAO,EAAE,MAAKE,YAAY,CAACF,CAAD,EAAID,MAAJ,CAD1B;AAAA,6BAEI;AAAA,kBAAOA,MAAM,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA;AAFJ,OAAUJ,MAAM,CAACI,WAAjB;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AASH,GAVD;;AAYA,QAAMF,qBAAqB,GAAGG,KAAD,IAAS;AAClC,QAAIC,OAAO,GAAG,eAAd;AACA,QAAGD,KAAK,GAAEvB,aAAa,CAACyB,MAAd,GAAqB,CAA/B,EACAD,OAAO,IAAI,yBAAX;AAEA,QAAGnB,cAAc,KAAKkB,KAAtB,EACAC,OAAO,IAAE,wBAAT;AACA;AAEH,GATD;;AAWA,QAAMH,YAAY,GAAC,CAACE,KAAD,EAAQL,MAAR,KAAiB;AAChC,QAAIQ,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwBV,MAAM,CAACI,WAA/B,CAAtB;AACA,QAAG,CAACI,eAAJ,EACA;AAEAA,IAAAA,eAAe,CAACG,cAAhB,CAA+B;AAACC,MAAAA,SAAS,EAAE;AAAZ,KAA/B;AACAxB,IAAAA,iBAAiB,CAACiB,KAAD,CAAjB;AACAf,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AAEH,GATD;;AAWA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,OAAO,EAAE,MAAKA,oBAAoB,CAAC,CAACD,iBAAF,CAAjE;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAkC,UAAA,OAAO,EAAE,MAAKC,oBAAoB,CAAC,CAACD,iBAAF,CAApE;AAAA,iCACI,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,uBAA3B;AAAmD,YAAA,IAAI,EAAEL;AAAzD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAOI;AAAK,UAAA,SAAS,EAAGK,iBAAD,GAAqB,uCAArB,GAA8D,gBAA9E;AAAA,oBACKS;AADL;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GAlEuBZ,M;;KAAAA,M","sourcesContent":["import React, { useState } from 'react'\nimport { TOTAL_SCREEN, GET_SCREEN_INDEX, TOTAL_SCREENS } from '../../../utilities/commonUtils'\nimport ScrollService from '../../../utilities/ScrollService'\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport './Header.css'\n\nexport default function Header(){\n\n    const [selectedScreen, setSelectedScreen] = useState(0)\n    const [showHeaderOptions, setShowHeaderOptions] = useState(false)\n\n    const updateCurrentScreen = (currentScreen)=>{\n        if(!currentScreen || !currentScreen.screenInView)\n        return;\n        let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\n        if(screenIndex<0)\n        return\n    }\n\n    let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\n\n    const getHeaderOptions =()=>{\n        return(\n            TOTAL_SCREENS.map((screen, i)=>(\n                <div key={screen.screen_name} className={getHeaderOptionsClass(i)}\n                onClick={()=> switchScreen(i, screen)}>\n                    <span>{screen.screen_name}</span>\n                </div>\n\n            ))\n        )\n    }\n\n    const getHeaderOptionsClass =(index)=>{\n        let classes = \"header-option\";\n        if(index <TOTAL_SCREENS.length-1)\n        classes += \"header-option-seperator\";\n\n        if(selectedScreen === index)\n        classes+=\"selected-header-option\";\n        return\n\n    }\n\n    const switchScreen=(index, screen)=>{\n        let screenComponent = document.getElementById(screen.screen_name)\n        if(!screenComponent)\n        return;\n\n        screenComponent.scrollIntoView({behaviour: 'smooth'})\n        setSelectedScreen(index)\n        setShowHeaderOptions(false)\n\n    }\n    \n    return(\n        <div>\n            <div className='header-option' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\n                <div className='header-parent'>\n                    <div className='header-hamburger' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\n                        <FontAwesomeIcon className='header-hamburger-bars' icon={faBars} />\n                    </div>\n                    <div className='header-logo'>\n                        <span>ISHAN</span>\n                    </div>\n                    <div className={(showHeaderOptions)? \"header-options show-hamburger-options\": \"header-options\"}>\n                        {getHeaderOptions}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}