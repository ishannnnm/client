{"ast":null,"code":"export function executeSchedule(parentSubscription, scheduler, work, delay, repeat) {\n  if (delay === void 0) {\n    delay = 0;\n  }\n\n  if (repeat === void 0) {\n    repeat = false;\n  }\n\n  var scheduleSubscription = scheduler.schedule(function () {\n    work();\n\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    return scheduleSubscription;\n  }\n}","map":{"version":3,"sources":["/Users/ishannnnnm/Desktop/portfolio app/client/node_modules/rxjs/src/internal/util/executeSchedule.ts"],"names":[],"mappings":"AAkBA,OAAM,SAAU,eAAV,CACJ,kBADI,EAEJ,SAFI,EAGJ,IAHI,EAIJ,KAJI,EAKJ,MALI,EAKU;AADd,MAAA,KAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,KAAA,GAAA,CAAA;AAAS;;AACT,MAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,MAAA,GAAA,KAAA;AAAc;;AAEd,MAAM,oBAAoB,GAAG,SAAS,CAAC,QAAV,CAAmB,YAAA;AAC9C,IAAA,IAAI;;AACJ,QAAI,MAAJ,EAAY;AACV,MAAA,kBAAkB,CAAC,GAAnB,CAAuB,KAAK,QAAL,CAAc,IAAd,EAAoB,KAApB,CAAvB;AACD,KAFD,MAEO;AACL,WAAK,WAAL;AACD;AACF,GAP4B,EAO1B,KAP0B,CAA7B;AASA,EAAA,kBAAkB,CAAC,GAAnB,CAAuB,oBAAvB;;AAEA,MAAI,CAAC,MAAL,EAAa;AAKX,WAAO,oBAAP;AACD;AACF","sourcesContent":["import { Subscription } from '../Subscription';\nimport { SchedulerAction, SchedulerLike } from '../types';\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay: number,\n  repeat: true\n): void;\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay?: number,\n  repeat?: false\n): Subscription;\n\nexport function executeSchedule(\n  parentSubscription: Subscription,\n  scheduler: SchedulerLike,\n  work: () => void,\n  delay = 0,\n  repeat = false\n): Subscription | void {\n  const scheduleSubscription = scheduler.schedule(function (this: SchedulerAction<any>) {\n    work();\n    if (repeat) {\n      parentSubscription.add(this.schedule(null, delay));\n    } else {\n      this.unsubscribe();\n    }\n  }, delay);\n\n  parentSubscription.add(scheduleSubscription);\n\n  if (!repeat) {\n    // Because user-land scheduler implementations are unlikely to properly reuse\n    // Actions for repeat scheduling, we can't trust that the returned subscription\n    // will control repeat subscription scenarios. So we're trying to avoid using them\n    // incorrectly within this library.\n    return scheduleSubscription;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}