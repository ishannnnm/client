{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var ArgumentOutOfRangeError = createErrorClass(function (_super) {\n  return function ArgumentOutOfRangeErrorImpl() {\n    _super(this);\n\n    this.name = 'ArgumentOutOfRangeError';\n    this.message = 'argument out of range';\n  };\n});","map":{"version":3,"sources":["/Users/ishannnnnm/Desktop/portfolio app/client/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts"],"names":[],"mappings":"AAAA,SAAS,gBAAT,QAAiC,oBAAjC;AAsBA,OAAO,IAAM,uBAAuB,GAAgC,gBAAgB,CAClF,UAAC,MAAD,EAAO;AACL,SAAA,SAAS,2BAAT,GAAoC;AAClC,IAAA,MAAM,CAAC,IAAD,CAAN;;AACA,SAAK,IAAL,GAAY,yBAAZ;AACA,SAAK,OAAL,GAAe,uBAAf;AACD,GAJD;AAIC,CAN+E,CAA7E","sourcesContent":["import { createErrorClass } from './createErrorClass';\n\nexport interface ArgumentOutOfRangeError extends Error {}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  /**\n   * @deprecated Internal implementation detail. Do not construct error instances.\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\n   */\n  new (): ArgumentOutOfRangeError;\n}\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = createErrorClass(\n  (_super) =>\n    function ArgumentOutOfRangeErrorImpl(this: any) {\n      _super(this);\n      this.name = 'ArgumentOutOfRangeError';\n      this.message = 'argument out of range';\n    }\n);\n"]},"metadata":{},"sourceType":"module"}