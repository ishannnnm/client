{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nexport var intervalProvider = {\n  setInterval: function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var delegate = intervalProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) || setInterval).apply(void 0, __spreadArray([], __read(args)));\n  },\n  clearInterval: function (handle) {\n    var delegate = intervalProvider.delegate;\n    return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n  },\n  delegate: undefined\n};","map":{"version":3,"sources":["/Users/ishannnnnm/Desktop/portfolio app/client/node_modules/rxjs/src/internal/scheduler/intervalProvider.ts"],"names":[],"mappings":";AAcA,OAAO,IAAM,gBAAgB,GAAqB;AAGhD,EAAA,WAAW,EAAA,YAAA;AAAC,QAAA,IAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,MAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACF,QAAA,QAAQ,GAAK,gBAAgB,CAArB,QAAR;AACR,WAAO,CAAC,CAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,WAAV,KAAyB,WAA1B,EAAsC,KAAtC,CAAsC,KAAA,CAAtC,EAAsC,aAAA,CAAA,EAAA,EAAA,MAAA,CAAI,IAAJ,CAAA,CAAtC,CAAP;AACD,GAN+C;AAOhD,EAAA,aAAa,EAAA,UAAC,MAAD,EAAO;AACV,QAAA,QAAQ,GAAK,gBAAgB,CAArB,QAAR;AACR,WAAO,CAAC,CAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,aAAV,KAA2B,aAA5B,EAA2C,MAA3C,CAAP;AACD,GAV+C;AAWhD,EAAA,QAAQ,EAAE;AAXsC,CAA3C","sourcesContent":["type SetIntervalFunction = (handler: () => void, timeout?: number, ...args: any[]) => number;\ntype ClearIntervalFunction = (handle: number) => void;\n\ninterface IntervalProvider {\n  setInterval: SetIntervalFunction;\n  clearInterval: ClearIntervalFunction;\n  delegate:\n    | {\n        setInterval: SetIntervalFunction;\n        clearInterval: ClearIntervalFunction;\n      }\n    | undefined;\n}\n\nexport const intervalProvider: IntervalProvider = {\n  // When accessing the delegate, use the variable rather than `this` so that\n  // the functions can be called without being bound to the provider.\n  setInterval(...args) {\n    const { delegate } = intervalProvider;\n    return (delegate?.setInterval || setInterval)(...args);\n  },\n  clearInterval(handle) {\n    const { delegate } = intervalProvider;\n    return (delegate?.clearInterval || clearInterval)(handle);\n  },\n  delegate: undefined,\n};\n"]},"metadata":{},"sourceType":"module"}